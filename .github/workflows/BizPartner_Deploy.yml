on: [push]

# Environment variables available to all jobs and steps in this workflow
env:
  REGISTRY_NAME: azacrwolverine
  CLUSTER_NAME: AZAKSBIZPtnrSITCluster
  CLUSTER_RESOURCE_GROUP: RG-Wolverine-SIT-NonProdPublic
  NAMESPACE: default
  APP_NAME: bizpartner
  SECRET: bizpartnersecret


jobs:
  build:
    runs-on: self-hosted
    environment: SIT_Biz_Partner
    steps:
      - uses: actions/checkout@main
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: cache clean
        run: |
           npm cache clean --force
      - name: npm install
        working-directory: ./BizPartner_WD
        run: |
            npm install
      - name: npm build
        working-directory: ./BizPartner_WD
        run: |
            npm run build --if-present

    # Connect to Azure Container Registry (ACR)
      - uses: azure/docker-login@v1
        with:
         login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
         username: ${{ secrets.REGISTRY_USERNAME }}
         password: ${{ secrets.REGISTRY_PASSWORD }}

    # Container build and push to a Azure Container Registry (ACR)
      - name: build docker images
        working-directory: ./BizPartner_WD
        run: |
         docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
         docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}


    # Set the target Azure Kubernetes Service (AKS) cluster.
      - uses: azure/aks-set-context@v1
        with:
         creds: '${{ secrets.AZURE_CREDENTIALS }}'
         cluster-name: ${{ env.CLUSTER_NAME }}
         resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

    # Create namespace if doesn't exist
      - run: |
          kubectl create namespace ${{ env.NAMESPACE }} --dry-run=client -o json | kubectl apply -f -

    # Create image pull secret for ACR
      - uses: azure/k8s-create-secret@v1
        with:
         container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
         container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
         container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
         secret-name: ${{ env.SECRET }}
         namespace: ${{ env.NAMESPACE }}
         arguments: --force true
      - name: login AkS
        run: |
          az aks get-credentials -g  RG-Wolverine-SIT-NonProdPublic -n AZAKSBIZPtnrSITCluster --overwrite

    # Deploy app to AKS

      - uses: azure/k8s-deploy@v1
        with:
           manifests: |
              ./BizPartner_WD/BizPartner-deployment.yaml

           images: |
             ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
           imagepullsecrets: |
             ${{ env.SECRET }}
           namespace: ${{ env.NAMESPACE }}
